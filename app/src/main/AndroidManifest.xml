<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.jiguang.jpusttest"
    android:versionCode="2"
    android:versionName="2.0.0"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-sdk
        android:minSdkVersion="16"
        android:targetSdkVersion="21"
        tools:overrideLibrary="

            com.huawei.android.hms.base,
            com.huawei.android.hms.push,

            com.google.android.gms.common.license,
            com.google.android.gms.tasks.license,
            com.google.firebase.firebase.common.license,
            com.google.firebase.firebase.iid.license,
            com.google.firebase.firebase.messaging.license,
            com.google.firebase.measurement.impl.license,
            com.google.firebase.measurement.license,
            com.google.firebase.firebase_core,
            com.google.firebase.measurement,
            com.google.firebase.firebase_common,
            com.google.firebase.messaging,
            com.google.firebase.iid,
            com.google.android.gms,
            com.google.android.gms.tasks,
            com.google.firebase.measurement_impl,
            cn.jpush.android.thirdpush.meizu"
        />

    <!-- Required -->
    <permission
        android:name="com.example.jiguang.jpusttest.permission.JPUSH_MESSAGE"
        android:protectionLevel="signature" />

    <!-- Required  一些系统要求的权限，如访问网络等-->
    <uses-permission android:name="com.example.jiguang.jpusttest.permission.JPUSH_MESSAGE" />
    <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <!-- Optional for location -->
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"  /> <!-- 用于开启 debug 版本的应用在6.0 系统上 层叠窗口权限 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.GET_TASKS" />

    <!--小米推送所需权限-->
    <permission
        android:name="com.example.jiguang.jpusttest.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature"/>
    <uses-permission android:name="com.example.jiguang.jpusttest.permission.MIPUSH_RECEIVE"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <uses-permission android:name="android.permission.GET_TASKS"/>
    <uses-permission android:name="android.permission.VIBRATE"/>
    <!--小米结束-->

    <!--魅族推送所需要的权限-->
    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE"/>
    <permission
        android:name="com.example.jiguang.jpusttest.permission.C2D_MESSAGE"
        android:protectionLevel="signature">
    </permission>
    <uses-permission
        android:name="com.example.jiguang.jpusttest.permission.C2D_MESSAGE"/>
    <!--魅族结束-->

    <application
        android:icon="@drawable/application_icon"
        android:allowBackup="false"
        android:label="@string/app_name"
        android:name=".MyApplication">

        <!-- For test only 测试的主程序-->
        <activity
            android:name="com.example.jiguang.jpusttest.MainActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>


        <!-- Rich push 核心功能 since 2.0.6-->
        <activity
            android:name="cn.jpush.android.ui.PopWinActivity"
            android:theme="@style/MyDialogStyle"
            android:exported="true"><!--集成华为厂商推送时，要改为true-->

            <intent-filter>
                <category android:name="android.intent.category.DEFAULT"></category>
                <category android:name="com.example.jiguang.jpusttest"></category>
                <action android:name="cn.jpush.android.ui.PopWinActivity"/><!--集成FCM时需增加此Action-->
            </intent-filter>
        </activity>

        <!-- Required SDK核心功能-->
        <activity
            android:name="cn.jpush.android.ui.PushActivity"
            android:configChanges="orientation|keyboardHidden"
            android:theme="@android:style/Theme.NoTitleBar"
            android:exported="true"><!--集成华为厂商推送时，要改为true-->
            <intent-filter>
                <action android:name="cn.jpush.android.ui.PushActivity" /><!--集成FCM时需增加此Action-->
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="com.example.jiguang.jpusttest" />
            </intent-filter>
        </activity>

        <!-- Required SDK 核心功能-->
        <!-- 可配置android:process参数将PushService放在其他进程中 -->
        <service
            android:name="cn.jpush.android.service.PushService"
            android:process=":mult"
            android:exported="false">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.REGISTER" />
                <action android:name="cn.jpush.android.intent.REPORT" />
                <action android:name="cn.jpush.android.intent.PushService" />
                <action android:name="cn.jpush.android.intent.PUSH_TIME" />
            </intent-filter>
        </service>

        <!-- since 3.0.9 Required SDK 核心功能-->
        <provider
            android:authorities="com.example.jiguang.jpusttest.DataProvider"
            android:name="cn.jpush.android.service.DataProvider"
            android:exported="false"/>

        <!-- since 1.8.0 option 可选项。用于同一设备中不同应用的JPush服务相互拉起的功能。 -->
        <!-- 若不启用该功能可删除该组件，将不拉起其他应用也不能被其他应用拉起 -->
        <service
            android:name="cn.jpush.android.service.DaemonService"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.DaemonService" />
                <category android:name="com.example.jiguang.jpusttest" />
            </intent-filter>
        </service>
        <!-- since 3.1.0 Required SDK 核心功能-->
        <!--这个组件也是用于拉起功能的，如果不启用拉起也可以将其删除-->
        <provider
            android:authorities="com.example.jiguang.jpusttest.DownloadProvider"
            android:name="cn.jpush.android.service.DownloadProvider"
            android:exported="true"
            />

        <!-- Required SDK核心功能-->
        <receiver
            android:name="cn.jpush.android.service.PushReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter android:priority="1000">
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY" />   <!--Required  显示通知栏 -->
                <category android:name="com.example.jiguang.jpusttest" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
            <!-- Optional -->
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_ADDED" />
                <action android:name="android.intent.action.PACKAGE_REMOVED" />

                <data android:scheme="package" />
            </intent-filter>
        </receiver>

        <!-- Required SDK核心功能-->
        <receiver android:name="cn.jpush.android.service.AlarmReceiver" android:exported="false"/>

        <!-- Required since 3.0.7 -->
        <!-- 新的tag/alias接口结果返回需要开发者配置一个自定的广播 -->
        <!-- 该广播需要继承JPush提供的JPushMessageReceiver类, 并如下新增一个 Intent-Filter -->
        <receiver
            android:name=".BindStateReceiver"
            android:enabled="true" >
            <intent-filter>
                <action android:name="cn.jpush.android.intent.RECEIVE_MESSAGE" />
                <category android:name="com.example.jiguang.jpusttest" />
            </intent-filter>
        </receiver>

        <!-- Required  . Enable it you can get statistics data with channel -->
        <meta-data android:name="JPUSH_CHANNEL" android:value="developer-default"/>
        <meta-data android:name="JPUSH_APPKEY" android:value="a99b3e53258a1b864a1ce758" /> <!--  </>值来自开发者平台取得的AppKey-->

        <receiver
            android:name=".MessageReceiver"
            android:enabled="true">
            <intent-filter>

                <!--SDK在JPush注册并获取到 Registration ID-->
                <action android:name="cn.jpush.android.intent.REGISTRATION" />

                <!--接收到自定义消息-->
                <action android:name="cn.jpush.android.intent.MESSAGE_RECEIVED" />

                <!--接收到App推送通知-->
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED" />

                <!--App推送通知被点开-->
                <action android:name="cn.jpush.android.intent.NOTIFICATION_OPENED" />

                <!--App推送通知中的按钮被点击-->
                <action android:name="cn.jpush.android.intent.NOTIFICATION_CLICK_ACTION" />

                <!--长连接的状态更变-->
                <action android:name="cn.jpush.android.intent.CONNECTION" />

                <category android:name="com.example.jiguang.jpusttest" />
            </intent-filter>
        </receiver>

        <!--华为聚合通道的组件-->
        <provider
            android:name="com.huawei.hms.update.provider.UpdateProvider"
            android:authorities="com.example.jiguang.jpusttest.hms.update.provider"
            android:exported="false"
            android:grantUriPermissions="true">
        </provider>

        <receiver
            android:name="com.huawei.hms.support.api.push.PushEventReceiver">
            <intent-filter>
                <!--接收通道发来的通知栏消息,兼容老版本 Push-->
                <action android:name="com.huawei.intent.action.PUSH"/>
            </intent-filter>
        </receiver>

        <receiver
            android:name="cn.jpush.android.service.PluginHuaweiPlatformsReceiver">
            <intent-filter>
                <!--必须,用于接收 token-->
                <action android:name="com.huawei.android.push.intent.REGISTRATION"/>
                <!--必须,用于接收消息-->
                <action android:name="com.huawei.android.push.intent.RECEIVE"/>
                <!--可选,用于点击通知栏或通知栏上的按钮后触发 onEvent 回调-->
                <action android:name="com.huawei.android.push.intent.CLICK"/>
                <!--可选,查看 push 通道是否连接,不查看则不需要-->
                <action android:name="com.huawei.intent.action.PUSH_STATE"/>
            </intent-filter>
            <meta-data
                android:name="CS_cloud_ablitity"
                android:value="successRateAnalytics"/>
        </receiver>

        <meta-data
            android:name="com.huawei.hms.client.appid"
            android:value="appid=100316597">
        </meta-data>

        <activity
            android:name=".HuaweiActivity"
            android:exported="true"><!--android:exported必须为true-->

            <intent-filter>
                <action android:name="android.intent.action.VIEW"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>

        </activity>
        <!--华为组件结束-->

        <!--小米推送所需组件-->
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice"/>
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice"/>
        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true"/>
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true"/>
        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER"/>
            </intent-filter>
        </receiver>

        <!--JPush接收的小米sdk的消息接收类型-->
        <receiver
            android:name="cn.jpush.android.service.PluginXiaomiPlatformsReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE"/>
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED"/>
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR"/>
            </intent-filter>
        </receiver>

        <meta-data
            android:name="XIAOMI_APPKEY"
            android:value="MI-5651783891973"/>
        <meta-data
            android:name="XIAOMI_APPID"
            android:value="MI-2882303761517838973"/>
        <!--小米组件结束-->

        <!--FCM-->
        <service android:name="cn.jpush.android.service.PluginFCMMessagingService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT"/>
            </intent-filter>
        </service>

        <service android:name="cn.jpush.android.service.PluginFCMInstanceIdService">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT"/>
            </intent-filter>
        </service>

        <meta-data
            android:name="com.google.firebase.messaging.default_notification_icon"
            android:resource="@drawable/fcm_notification_icon"/>

        <activity android:name=".FCMActivity">
            <intent-filter>
                <action android:name="com.example.jiguang.jpusttest.FCMActivity"/>
            </intent-filter>
        </activity>
        <!--FCM组件结束-->

        <!--魅族组件-->
        <receiver
            android:name="cn.jpush.android.service.PluginMeizuPlatformsReceiver">
            <intent-filter>
                <!--接收 push 消息-->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE"/>
                <!--接收 register 消息-->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK"/>
                <!--接收 unregister 消息-->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK"/>
                <!--兼容低版本 Flyme3 推送服务配置-->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION"/>
                <action android:name="com.meizu.c2dm.intent.RECEIVE"/>
                <category android:name="com.example.jiguang.jpusttest"></category>
            </intent-filter>
        </receiver>

        <meta-data
            android:name="MEIZU_APPKEY"
            android:value="MZ-81af2b8ed3fe4a55ab01591d1c39f71a"/>
        <meta-data
            android:name="MEIZU_APPID"
            android:value="MZ-114787"/>
        <!--魅族组件结束-->

    </application>

</manifest>